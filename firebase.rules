rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin();
    }

    match /products/{productId} {
      allow read: if true;  // Allow public reading of products
      allow write: if isAdmin();
    }

    match /orders/{orderId} {
      allow read: if request.auth != null && (
        resource.data.userId == request.auth.uid || isAdmin()
      );
      allow create: if request.auth != null;
      allow update, delete: if isAdmin();
    }

    match /wishlists/{wishlistId} {
      allow read: if request.auth != null && (
        resource.data.userId == request.auth.uid || isAdmin()
      );
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow delete: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin());
      allow update: if request.auth != null && 
        ((resource.data.userId == request.auth.uid && 
          request.resource.data.userId == request.auth.uid) || isAdmin());
    }

    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.userId || isAdmin());
      allow delete: if request.auth != null && 
        (request.auth.uid == resource.data.userId || isAdmin());
    }
  }
}
